name: Deploy Portfolio

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: portfolio
  INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy to EC2 using Session Manager
        run: |
          aws ssm send-command \
            --instance-ids ${{ env.INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
              'echo \"Starting deployment...\"',
              'echo \"Verifying AWS CLI...\"',
              'aws --version',
              'echo \"Verifying Docker...\"',
              'docker --version',
              'echo \"Current Docker images:\"',
              'docker images',
              'echo \"Logging into ECR...\"',
              'aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }} || { echo \"ECR login failed\"; exit 1; }',
              'echo \"Verifying ECR access...\"',
              'aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} || { echo \"ECR repository access failed\"; exit 1; }',
              'echo \"Listing available images in repository...\"',
              'aws ecr list-images --repository-name ${{ env.ECR_REPOSITORY }} || { echo \"Failed to list images\"; exit 1; }',
              'echo \"Pulling image...\"',
              'docker pull ${{ steps.build-image.outputs.image }} || { echo \"Image pull failed\"; docker images; exit 1; }',
              'echo \"Stopping existing container...\"',
              'docker stop portfolio || true',
              'docker rm portfolio || true',
              'echo \"Starting new container...\"',
              'docker run -d --name portfolio --restart unless-stopped -p 80:80 ${{ steps.build-image.outputs.image }} || { echo \"Container start failed\"; exit 1; }',
              'echo \"Waiting for container to start...\"',
              'sleep 10',
              'echo \"Checking container status...\"',
              'docker ps -a',
              'echo \"Checking container logs...\"',
              'docker logs portfolio',
              'echo \"Testing container health...\"',
              'curl -I http://localhost:80 || echo \"Container is running but service might not be ready yet\"'
            ]" \
            --output-s3-bucket-name ${{ secrets.S3_BUCKET_NAME }} \
            --output-s3-key-prefix "deploy-logs" \
            --region ${{ env.AWS_REGION }}
